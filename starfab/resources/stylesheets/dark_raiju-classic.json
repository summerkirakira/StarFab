{
  "name": "RaijÅ« - Classic",
  "author": "Tobias Timm",
  "maintainers": ["Tobias Timm <tbs.timm@gmail.com>"],
  "type": "dark",
  "colors": {
    "activityBar.background": "#1c1f26",
    "activityBar.foreground": "#D7DAE0",
    "activityBarBadge.background": "#5681f4",
    "activityBarBadge.foreground": "#F8FAFD",
    "badge.background": "#282c34",
    "button.background": "#404754",
    "dropdown.background": "#1c1f26",
    "debugToolBar.background": "#21252b",
    "diffEditor.insertedTextBackground": "#01579b",
    "editorError.foreground": "#E15A60",
    "editorMarkerNavigation.background": "#21252b",
    "editorRuler.foreground": "#abb2bf26",
    "editor.lineHighlightBackground": "#65737e30",
    "editor.selectionBackground": "#67769660",
    "editor.selectionHighlightBackground": "#ffffff10",
    "editorCursor.background": "#ffffffc9",
    "editor.findMatchHighlightBackground": "#314365",
    "editor.wordHighlightBackground": "#314365",
    "editor.wordHighlightStrongBackground": "#abb2bf26",
    "editorGroup.background": "#181A1F",
    "editorGroup.border": "#181A1F",
    "editorIndentGuide.background": "#3B4048",
    "editorLineNumber.foreground": "#495162",
    "editorWhitespace.foreground": "#3B4048",
    "editorHoverWidget.background": "#232830",
    "editorHoverWidget.border": "#181A1F",
    "editorSuggestWidget.background": "#21252B",
    "editorSuggestWidget.border": "#181A1F",
    "editorSuggestWidget.selectedBackground": "#2c313a",
    "editorWidget.background": "#21252B",
    "gitDecoration.modifiedResourceForeground": "#8d9ad1",
    "gitDecoration.addedResourceForgeround": "#99C794",
    "gitDecoration.deletedResourceForeground": "#6F7899",
    "gitDecoration.untrackedResourceForeground": "#E15A60",
    "gitDecoration.conflictingResourceForeground": "#E15A60",
    "input.background": "#1c1f26",
    "input.border": "#343d64",
    "list.highlightForeground": "#7c9ffe",
    "peekViewEditor.matchHighlightBackground": "#29244b",
    "sideBarSectionHeader.background": "#1c1f26",
    "statusBar.background": "#1c1f26",
    "statusBar.foreground": "#64727f",
    "statusBarItem.hoverBackground": "#2c313a",
    "statusBar.noFolderBackground": "#21252B",
    "statusBar.debuggingBackground": "#0E4FFF",
    "statusBar.debuggingBorder": "#013AD5",
    "statusBar.debuggingForeground": "#ffffff",
    "titleBar.activeForeground": "#9da5b4",
    "titleBar.inactiveForeground": "#6B717D",
    "dropdown.border": "#282c35",
    "editor.background": "#2a2d37",
    "editor.foreground": "#d4d4d4",
    "editorCursor.foreground": "#b6bcc4",
    "editorGroupHeader.tabsBorder": "#282c35",
    "editorGutter.background": "#282c35",
    "gitDecoration.ignoredResourceForeground": "#64727f",
    "list.activeSelectionBackground": "#343d64",
    "list.activeSelectionForeground": "#dfe1e8",
    "list.inactiveSelectionBackground": "#343d64",
    "list.inactiveSelectionForeground": "#dfe1e8",
    "list.focusBackground": "#343d64",
    "list.focusForeground": "#dfe1e8",
    "list.hoverBackground": "#1c1f26",
    "list.hoverForeground": "#c0c5cd",
    "panel.background": "#232830",
    "panel.border": "#232830",
    "scrollbar.shadow": "#282c35",
    "scrollbarSlider.activeBackground": "#6d87b860",
    "scrollbarSlider.background": "#6d87b830",
    "scrollbarSlider.hoverBackground": "#6d87b830",
    "sideBar.background": "#1c1f26",
    "sideBar.border": "#232830",
    "sideBar.foreground": "#7E8C99",
    "sideBarSectionHeader.foreground": "#c0c5cd",
    "editorGroupHeader.tabsBackground": "#1c1f26",
    "editorGroup.dropBackground": "#1c1f26",
    "tab.border": "#1c1f26",
    "tab.activeBackground": "#2a2d37",
    "tab.inactiveBackground": "#1c1f26",
    "titleBar.inactiveBackground": "#1c1f26",
    "titleBar.activeBackground": "#1c1f26",
    "widget.shadow": "#282c35",
    "pickerGroup.foreground": "#7c9ffe",
    "pickerGroup.border": "#5681f4",
    "focusBorder": "#5681f4",
    "progressBar.background": "#5681f4",
    "editorLink.activeForeground": "#5681f4",
    "peekView.border": "#314365",
    "peekViewEditor.matchHighlightBorder": "#5681f4",
    "peekViewTitle.background": "#1c1f26",
    "peekViewTitleDescription.foreground": "#d4d4d4",
    "peekViewTitleLabel.foreground": "#d4d4d4",
    "notifications.background": "#282c35",
    "notifications.foreground": "#d4d4d4",
    "notificationCenterHeader.foreground": "#d4d4d4",
    "extensionButton.prominentForeground": "#d4d4d4",
    "extensionButton.prominentBackground": "#5681f4",
    "extensionButton.prominentHoverBackground": "#7c9ffe",
    "editorUnnecessary.foreground": "#6F7899",
    "editorGutter.addedBackground": "#99C794",
    "editorGutter.deletedBackground": "#E15A60",
    "editorGutter.modifiedBackground": "#8d9ad1",
    "editorOverviewRuler.modifiedForeground": "#8d9ad1",
    "editorOverviewRuler.addedForeground": "#99C794",
    "editorOverviewRuler.deletedForeground": "#6F7899",
    "editorOverviewRuler.errorForeground": "#E15A60",
    "editorOverviewRuler.warningForeground": "#ffedcb",
    "editorOverviewRuler.infoForeground": "#6f7899",
    "breadcrumb.foreground": "#d4d4d4",
    "breadcrumb.focusForeground": "#dfe1e8",
    "breadcrumb.activeSelectionForeground": "#8d9ad1",
    "breadcrumbPicker.background": "#1c1f26",
    "editorWarning.foreground": "#ffedcb",
    "listWarning.foreground": "#ffedcb"
  },
  "tokenColors": [
    {
      "name": "JSON Punctuation",
      "scope": [
        "punctuation.support.type.property-name.begin.json",
        "punctuation.support.type.property-name.end.json"
      ],
      "settings": {
        "foreground": "#d4d4d4ff"
      }
    },
    {
      "name": "Reason - Keyword",
      "scope": ["source.reason keyword", "source.reason storage.type"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Reason - Control",
      "scope": ["source.reason keyword.control.switch"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Reason - Operator",
      "scope": [
        "source.reason keyword.control.less",
        "source.reason keyword.operator keyword.control"
      ],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Reason - Class",
      "scope": ["source.reason support.class entity.name.class"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Reason - Call",
      "scope": ["source.reason support.property-value entity.name.filename"],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Block & Braces",
      "scope": [
        "keyword.operator.type.annotation",
        "meta.brace.round",
        "punctuation",
        "keyword.operator.ternary",
        "meta.brace.curly.graphql",
        "meta.brace.square",
        "punctuation.support.type.property-name.begin.json",
        "punctuation.support.type.property-name.end.json"
      ],
      "settings": {
        "foreground": "#817c98"
      }
    },
    {
      "name": "Constants",
      "scope": [
        "meta.block.js variable.other.constant.property.js",
        "meta.block.js.jsx variable.other.constant.property.js.jsx",
        "meta.block.ts variable.other.constant.property.ts",
        "meta.block.tsx variable.other.constant.property.tsx"
      ],
      "settings": {
        "foreground": "#ceb3f7"
      }
    },
    {
      "name": "Decorator",
      "scope": [
        "punctuation.decorator.js",
        "punctuation.decorator.js.jsx",
        "punctuation.decorator.ts",
        "punctuation.decorator.tsx",
        "meta.decorator.js meta.function-call.js entity.name.function.js",
        "meta.decorator.js.jsx meta.function-call.js.jsx entity.name.function.js.jsx",
        "meta.decorator.ts meta.function-call.ts entity.name.function.ts",
        "meta.decorator.tsx meta.function-call.tsx entity.name.function.tsx"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Meta object literal key",
      "scope": [
        "source.js meta.object-literal.key.js",
        "source.js.jsx meta.object-literal.key.js.jsx",
        "source.ts meta.object-literal.key.ts",
        "source.tsx meta.object-literal.key.tsx",
        "source.js variable.object.property.js",
        "source.js.jsx variable.object.property.js.jsx",
        "source.ts variable.object.property.ts",
        "source.tsx variable.object.property.tsx"
      ],
      "settings": {
        // "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Meta object literal key - Punctuation",
      "scope": [
        "source.js meta.object-literal.key.js punctuation.separator.key-value.js",
        "source.js.jsx meta.object-literal.key.js.jsx punctuation.separator.key-value.js.jsx",
        "source.ts meta.object-literal.key.ts punctuation.separator.key-value.ts",
        "source.tsx meta.object-literal.key.tsx punctuation.separator.key-value.tsx",
        "source.ts keyword.operator.type.annotation.ts",
        "source.tsx keyword.operator.type.annotation.tsx",
        "punctuation.colon.graphql",
        "punctuation.graphql",
        "source.js keyword.operator.ternary.js",
        "source.js.jsx keyword.operator.ternary.js.jsx",
        "source.ts keyword.operator.ternary.ts",
        "source.tsx keyword.operator.ternary.tsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "jsx attributes",
      "scope": [
        "entity.other.attribute-name",
        "source.js entity.other.attribute-name.js",
        "source.js.jsx entity.other.attribute-name.js"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "HTML / JSX - Assignments #2",
      "scope": [
        "meta.tag.attributes.js meta.var.expr.js keyword.operator.assignment.js",
        "meta.tag.attributes.js.jsx meta.var.expr.js.jsx keyword.operator.assignment.js.jsx",
        "meta.tag.attributes.tsx meta.var.expr.tsx keyword.operator.assignment.tsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "HTML / JSX - Assignments",
      "scope": [
        "meta.tag.attributes.js keyword.operator.assignment.js",
        "meta.tag.attributes.js.jsx keyword.operator.assignment.js.jsx",
        "meta.tag.attributes.tsx keyword.operator.assignment.tsx",
        "meta.tag.any.html"
      ],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "graphql",
      "scope": [
        "source.js entity.name.function.tagged-template.js",
        "source.js.jsx entity.name.function.tagged-template.js.jsx",
        "source.ts entity.name.function.tagged-template.ts",
        "source.tsx entity.name.function.tagged-template.tsx"
      ],
      "settings": {
        "foreground": "#A7A7EE"
      }
    },
    {
      "name": "graphql - functions",
      "scope": [
        "source.js entity.name.function.graphql",
        "source.js.jsx entity.name.function.graphql",
        "source.ts entity.name.function.graphql",
        "source.tsx entity.name.function.graphql",
        "entity.name.function.graphql"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "graphql - keyword",
      "scope": ["source.graphql keyword"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "graphql - types",
      "scope": [
        "source.js support.type.builtin.graphql",
        "source.js.jsx support.type.builtin.graphql",
        "source.ts support.type.builtin.graphql",
        "source.tsx support.type.builtin.graphql",
        "keyword.operation.graphql",
        "support.type.builtin.graphql"
      ],
      "settings": {
        "foreground": "#8d9ad1"
      }
    },
    {
      "name": "graphql - Object Types",
      "scope": [
        "source.graphql meta.type.interface.graphql support.type.graphql",
        "keyword.operator.nulltype.graphql",
        "punctuation.assignment.graphql",
        "support.type.graphql"
      ],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "graphql - Object Types",
      "scope": [
        "source.graphql meta.type.interface.graphql meta.type.object.graphql support.type.graphql"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "graphql - variable parameters",
      "scope": ["variable.parameter.graphql"],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "graphql - variables",
      "scope": [
        "source.js meta.embedded.block.graphql meta.selectionset.graphql meta.arguments.graphql variable.graphql",
        "source.js.jsx meta.embedded.block.graphql meta.selectionset.graphql meta.arguments.graphql variable.graphql",
        "source.ts meta.embedded.block.graphql meta.selectionset.graphql meta.arguments.graphql variable.graphql",
        "source.tsx meta.embedded.block.graphql meta.selectionset.graphql meta.arguments.graphql variable.graphql",
        "meta.selectionset.graphql variable.graphql"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "GraphQL - ENF",
      "scope": ["entity.name.function.directive.graphql"],
      "settings": {
        "foreground": "#A7A7EE"
      }
    },
    {
      "name": "graphql - variable function",
      "scope": [
        "source.js meta.embedded.block.graphql meta.selectionset.graphql meta.selectionset.graphql variable.graphql",
        "source.js.jsx meta.embedded.block.graphql meta.selectionset.graphql meta.selectionset.graphql variable.graphql",
        "source.ts meta.embedded.block.graphql meta.selectionset.graphql meta.selectionset.graphql variable.graphql",
        "source.tsx meta.embedded.block.graphql meta.selectionset.graphql meta.selectionset.graphql variable.graphql",
        "meta.selectionset.graphql meta.selectionset.graphql variable.graphql"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Comments",
      "scope": ["comment", "punctuation.definition.comment"],
      "settings": {
        "foreground": "#6F7899",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Flow Typedef",
      "scope": [
        "source.js meta.interface.js storage.type.interface.js",
        "source.js.jsx meta.interface.js.jsx storage.type.interface.js.jsx",
        "source.js meta.type.declaration.js storage.type.type.js",
        "source.js.jsx meta.type.declaration.js.jsx storage.type.type.js.jsx",
        "meta.type.flowtype.js variable.other.flowtype.js",
        "meta.type.flowtype.js.jsx variable.other.flowtype.js.jsx",
        "meta.flowtype.polymorph.js variable.other.flowtype.js",
        "meta.flowtype.polymorph.js.jsx variable.other.flowtype.js.jsx"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Flow - Method return",
      "scope": [
        "source.js meta.type.declaration.js meta.object.type.js meta.field.declaration.js meta.type.annotation.js meta.type.function.return.js support.type.primitive.js",
        "source.js.jsx meta.type.declaration.js.jsx meta.object.type.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx meta.type.function.return.js.jsx support.type.primitive.js.jsx",
        "source.js meta.interface.js meta.field.declaration.js meta.type.annotation.js meta.type.function.return.js support.type.primitive.js",
        "source.js.jsx meta.interface.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx meta.type.function.return.js.jsx support.type.primitive.js.jsx"
      ],
      "settings": {}
    },
    {
      "name": "Flow Types - Primitives",
      "scope": [
        "source.js meta.interface.js meta.field.declaration.js meta.type.annotation.js support.type.primitive.js",
        "source.js.jsx meta.interface.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx support.type.primitive.js.jsx",
        "source.js meta.var.expr.js meta.var-single-variable.expr.js meta.type.annotation.js support.type.primitive.js",
        "source.js.jsx meta.var.expr.js.jsx meta.var-single-variable.expr.js.jsx meta.type.annotation.js.jsx support.type.primitive.js.jsx",
        "source.js meta.type.declaration.js meta.object.type.js meta.field.declaration.js meta.type.annotation.js support.type.primitive.js",
        "source.js.jsx meta.type.declaration.js.jsx meta.object.type.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx support.type.primitive.js.jsx",
        "source.js meta.class.js meta.field.declaration.js meta.type.annotation.js support.type.primitive.js",
        "source.js.jsx meta.class.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx support.type.primitive.js.jsx",
        "source.js meta.class.js meta.method.declaration.js meta.parameters.js meta.type.annotation.js support.type.primitive.js",
        "source.js.jsx meta.class.js.jsx meta.method.declaration.js.jsx meta.parameters.js.jsx meta.type.annotation.js.jsx support.type.primitive.js.jsx",
        "source.js meta.interface.js meta.field.declaration.js meta.type.annotation.js support.type.builtin.js",
        "source.js.jsx meta.interface.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx support.type.builtin.js.jsx",
        "source.js meta.type.declaration.js meta.object.type.js meta.field.declaration.js meta.type.annotation.js support.type.builtin.js",
        "source.js.jsx meta.type.declaration.js.jsx meta.object.type.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx support.type.builtin.js.jsx",
        "support.type.primitive.js",
        "support.type.primitive.js.jsx"
      ],
      "settings": {
        "foreground": "#ceb3f7"
      }
    },
    {
      "name": "Flow Types - Objects",
      "scope": [
        "source.js meta.interface.js meta.field.declaration.js meta.type.annotation.js entity.name.type.js",
        "source.js.jsx meta.interface.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx entity.name.type.js.jsx",
        "source.js meta.type.declaration.js meta.object.type.js meta.field.declaration.js meta.type.annotation.js entity.name.type.js",
        "source.js.jsx meta.type.declaration.js.jsx meta.object.type.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx entity.name.type.js.jsx",
        "source.js meta.class.js meta.field.declaration.js meta.type.annotation.js entity.name.type.js",
        "source.js.jsx meta.class.js.jsx meta.field.declaration.js.jsx meta.type.annotation.js.jsx entity.name.type.js.jsx",
        "source.js meta.var.expr.js meta.var-single-variable.expr.js meta.type.annotation.js entity.name.type.js",
        "source.js.jsx meta.var.expr.js.jsx meta.var-single-variable.expr.js.jsx meta.type.annotation.js.jsx entity.name.type.js.jsx",
        "source.js meta.class.js meta.method.declaration.js meta.parameters.js meta.type.annotation.js entity.name.type.js",
        "source.js.jsx meta.class.js.jsx meta.method.declaration.js.jsx meta.parameters.js.jsx meta.type.annotation.js.jsx entity.name.type.js.jsx",
        "source.js meta.type.declaration.js meta.type.parameters.js entity.name.type.js",
        "source.js.jsx meta.type.declaration.js.jsx meta.type.parameters.js.jsx entity.name.type.js.jsx"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "TypeScript Typedef",
      "scope": [
        "source.ts meta.interface.ts storage.type.interface.ts",
        "source.tsx meta.interface.tsx storage.type.interface.tsx",
        "source.ts meta.type.declaration.ts storage.type.type.ts",
        "source.tsx meta.type.declaration.tsx storage.type.type.tsx"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "TypeScript - Method return",
      "scope": [
        "source.ts meta.type.declaration.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts meta.type.function.return.ts support.type.primitive.ts",
        "source.tsx meta.type.declaration.tsx meta.object.type.tsx meta.field.declaration.tsx meta.type.annotation.tsx meta.type.function.return.tsx support.type.primitive.tsx",
        "source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts meta.type.function.return.ts support.type.primitive.ts",
        "source.tsx meta.interface.tsx meta.field.declaration.tsx meta.type.annotation.tsx meta.type.function.return.tsx support.type.primitive.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript - Primitives",
      "scope": [
        "source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.interface.tsx meta.field.declaration.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.type.declaration.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.type.declaration.tsx meta.object.type.tsx meta.field.declaration.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.class.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.class.tsx meta.field.declaration.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx meta.parameters.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.class.ts meta.type.annotation.ts support.type.primitive.ts",
        "source.tsx meta.class.tsx meta.type.annotation.tsx support.type.primitive.tsx",
        "source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts support.type.builtin.ts",
        "source.tsx meta.interface.tsx meta.field.declaration.tsx meta.type.annotation.tsx support.type.builtin.tsx",
        "support.type.primitive.ts",
        "support.type.primitive.tsx"
      ],
      "settings": {
        "foreground": "#ceb3f7"
      }
    },
    {
      "name": "TypeScript - Objects",
      "scope": [
        "source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.interface.tsx meta.field.declaration.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.type.declaration.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.type.declaration.tsx meta.object.type.tsx meta.field.declaration.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.class.ts meta.field.declaration.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.class.tsx meta.field.declaration.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx meta.parameters.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.type.declaration.ts meta.type.parameters.ts entity.name.type.ts",
        "source.tsx meta.type.declaration.tsx meta.type.parameters.tsx entity.name.type.tsx",
        "source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts entity.name.type.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx meta.parameters.tsx meta.type.annotation.tsx entity.name.type.tsx",
        "source.ts meta.class.ts meta.method.declaration.ts meta.return.type.ts entity.name.type.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx meta.return.type.tsx entity.name.type.tsx",
        "meta.parameters.ts meta.type.annotation.ts entity.name.type.ts",
        "meta.parameters.tsx meta.type.annotation.tsx entity.name.type.tsx"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "scope": [
        "source.ts meta.class.ts meta.method.declaration.ts meta.return.type.ts meta.type.parameters.ts entity.name.type.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx meta.return.type.tsx meta.type.parameters.tsx entity.name.type.tsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "C# Typedef",
      "scope": ["keyword.type.cs"],
      "settings": {
        "foreground": "#ceb3f7",
        "fontStyle": "italic"
      }
    },
    {
      "name": "C# Typedef - Object",
      "scope": ["source.cs storage.type.cs"],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "PHP Typedef",
      "scope": ["meta.function.parameter.typehinted.php storage.type.php"],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "Go Typedef",
      "scope": ["source.go storage.type"],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "PHP Block",
      "scope": [
        "punctuation.section.embedded.begin.php",
        "punctuation.section.embedded.end.php"
      ],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "Keyword - JavaScript",
      "scope": [
        "source.js keyword",
        "source.js.jsx keyword",
        "storage.type.js",
        "storage.type.js.jsx",
        "storage.type.function.js",
        "storage.type.function.js.jsx",
        "storage.modifier.js",
        "storage.modifier.js.jsx",
        "meta.type.flowtype.js support.type.type.flowtype.js",
        "meta.type.flowtype.js.jsx support.type.type.flowtype.js.jsx",
        "variable.other.flowtype.js",
        "variable.other.flowtype.js.jsx",
        "storage.type.extends.js",
        "storage.type.extends.js.jsx",
        "storage.type.function.js",
        "storage.type.function.js.jsx",
        "storage.type.class.js",
        "storage.type.class.js.jsx",
        "support.type.object.module.js",
        "support.type.object.module.js.jsx",
        "string.regexp.js keyword",
        "string.regexp.js.jsx keyword",
        "constant.language.import-export-all.js",
        "constant.language.import-export-all.js.jsx",
        "source.js meta.group.braces.curly.js keyword.other.substitution",
        "source.js.jsx meta.group.braces.curly.js.jsx keyword.other.substitution",
        "keyword.operator",
        "storage.modifier.async.js",
        "storage.modifier.async.js.jsx",
        "source.js meta.class.js meta.method.declaration.js storage.type.property.js",
        "source.js.jsx meta.class.js.jsx meta.method.declaration.js.jsx storage.type.property.js.jsx",
        "source.js meta.class.js meta.method.declaration.js storage.modifier.async.js",
        "source.js.jsx meta.class.js.jsx meta.method.declaration.js.jsx storage.modifier.async.js.jsx",
        "source.js meta.class.js meta.method.declaration.js meta.block.js meta.function-call.js variable.language.super.js",
        "source.js.jsx meta.class.js.jsx meta.method.declaration.js.jsx meta.block.js.jsx meta.function-call.js.jsx variable.language.super.js.jsx"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Keyword - TypeScript",
      "scope": [
        "source.ts keyword",
        "source.tsx keyword",
        "source.ts storage.modifier",
        "source.tsx storage.modifer",
        "storage.type.ts",
        "storage.type.tsx",
        "storage.type.function.ts",
        "storage.type.function.tsx",
        "storage.type.extends.ts",
        "storage.type.extends.tsx",
        "storage.type.type.ts",
        "storage.type.type.tsx",
        "storage.type.interface.ts",
        "storage.type.interface.tsx",
        "storage.type.class.ts",
        "storage.type.class.tsx",
        "storage.modifier.ts",
        "storage.modifier.tsx",
        "string.regexp.ts keyword",
        "string.regexp.tsx keyword",
        "constant.language.import-export-all.ts",
        "constant.language.import-export-all.tsx",
        "punctuation.definition.template-expression.begin",
        "punctuation.definition.template-expression.end",
        "source.ts meta.class.ts meta.method.declaration.ts storage.type.property.ts",
        "source.tsx meta.class.tsx meta.method.declaration.tsx storage.type.property.tsx",
        "source.ts meta.enum.declaration.ts storage.type.enum.ts",
        "source.tsx meta.enum.declaration.tsx storage.type.enum.tsx"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Keyword - PHP",
      "scope": [
        "source.php keyword",
        "storage.type.php",
        "storage.type.function.php",
        "storage.type.extends.php",
        "storage.type.class.php",
        "storage.modifier.php",
        "source.php storage.modifier",
        "storage.modifier.extends.php",
        "storage.modifier.implements.php",
        "source.php meta.group.braces.curly.php keyword.other.substitution",
        "keyword.operator"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Keyword - Dockerfile",
      "scope": ["source.dockerfile keyword"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Keyword - Shell Script",
      "scope": ["source.shell keyword"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },

    {
      "name": "Keyword - XML",
      "scope": ["text.xml keyword"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Java Typedef",
      "scope": ["keyword.type.java", "storage.type.primitive.java"],
      "settings": {
        "foreground": "#ceb3f7",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Java Typedef - Object",
      "scope": [
        "source.java storage.type.java",
        "source.java storage.type.object",
        "source.java entity.other.inherited-class.java"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Java Typedef - Generic",
      "scope": ["source.java storage.type.generic.java"],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Keyword - Java",
      "scope": [
        "source.java keyword",
        "storage.modifier.java",
        "storage.modifier.extends.java"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Annotations - Java",
      "scope": [
        "meta.declaration.annotation.java storage.type.annotation.java"
      ],
      "settings": {
        "foreground": "#A7A7EE",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Annotation Constants - Java",
      "scope": ["meta.declaration.annotation.java constant.other.key.java"],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Var definition - Shell Script",
      "scope": ["source.shell punctuation.definition.variable.shell"],
      "settings": {
        "foreground": "#8d9ad1"
      }
    },
    {
      "name": "Keyword - Go",
      "scope": [
        "source.go keyword",
        "storage.modifier.go",
        "storage.type.go",
        "storage.type.primitive.go",
        "storage.type.object.array.go"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Keyword - Elixir",
      "scope": [
        "source.elixir keyword",
        "storage.modifier.elixir",
        "storage.type.elixir",
        "storage.type.primitive.elixir",
        "storage.type.object.array.elixir"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Variables - Elixir",
      "scope": [
        "source.elixir.embedded variable.other.readwrite.module.elixir"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "HTML - Elixir",
      "scope": ["source.elixir.embedded punctuation.section.embedded.elixir"],
      "settings": {
        "foreground": "#8d9ad1"
      }
    },
    {
      "name": "Keyword - C#",
      "scope": [
        "source.cs keyword",
        "storage.modifier.cs",
        "source.cs keyword.control.flow.break.cs"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Function Call - JavaScript",
      "scope": [
        "source.js support.function",
        "source.js.jsx support.function",
        "support.function.js",
        "support.function.js.jsx",
        "variable.function.js",
        "variable.function.js.jsx",
        "meta.function-call.js entity.name.function.js",
        "meta.function-call.js.jsx entity.name.function.js.jsx",
        "meta.method-call.static.js entity.name.function.js",
        "meta.method-call.static.js.jsx entity.name.function.js.jsx",
        "meta.class meta.group.braces.curly meta.function-call variable.function.js",
        "meta.class meta.group.braces.curly meta.function-call variable.function.js.jsx",
        "variable.function.constructor.js",
        "variable.function.constructor.js.jsx",
        "constant.language.import-export-all.js",
        "constant.language.import-export-all.js.jsx",
        "keyword.operator.arithmetic.js",
        "keyword.operator.arithmetic.js.jsx",
        "source.js entity.name.type.js",
        "source.js.jsx entity.name.type.js.jsx",
        "source.js entity.other.inherited-class.js",
        "source.js.jsx entity.other.inherited-class.js.jsx",
        "source.js meta.class entity.name.type.module.js",
        "source.js.jsx meta.class entity.name.type.module.js.jsx"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Function Call - Go",
      "scope": [
        "source.go support.function",
        "support.function.go",
        "variable.function.go",
        "keyword.operator.arithmetic.go"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Constant - Gradle",
      "scope": "source.groovy constant.other.key.groovy",
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Function Call - TypeScript",
      "scope": [
        "source.ts support.function",
        "source.tsx support.function",
        "support.function.ts",
        "support.function.tsx",
        "meta.function-call.ts entity.name.function.ts",
        "meta.function-call.tsx entity.name.function.tsx",
        "meta.method-call.static.ts entity.name.function.ts",
        "meta.method-call.static.tsx entity.name.function.tsx",
        "meta.class meta.group.braces.curly meta.function-call variable.function.ts",
        "meta.class meta.group.braces.curly meta.function-call variable.function.tsx",
        "variable.function.constructor.ts",
        "variable.function.constructor.tsx",
        "constant.language.import-export-all.ts",
        "constant.language.import-export-all.tsx",
        "meta.var.expr.ts new.expr.ts entity.name.type.ts",
        "meta.var.expr.tsx new.expr.tsx entity.name.type.tsx",
        "source.ts entity.other.inherited-class.ts",
        "source.tsx entity.other.inherited-class.tsx",
        "source.ts meta.class entity.name.type.module.ts",
        "source.tsx meta.class entity.name.type.module.tsx"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Function Call - PHP",
      "scope": [
        "source.php support.function",
        "variable.function.php",
        "meta.class meta.group.braces.curly meta.function-call variable.function.php",
        "variable.function.constructor.php",
        "meta.method-call.php entity.name.function.php",
        "meta.method-call.static.php entity.name.function.php",
        "meta.function-call.php entity.name.function.php",
        "keyword.operator.arithmetic.php",
        "support.function.construct.output.php",
        "support.class.php",
        "meta.function-call.php support.function.construct.php"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Function Call - Shell Script",
      "scope": [
        "source.shell support.function",
        "keyword.operator.arithmetic.shell"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Variable - XML",
      "scope": ["text.xml variable.language"],
      "settings": {
        "foreground": "#d7e2ff",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Function Call - Java",
      "scope": [
        "source.java support.function",
        "support.function.java",
        "meta.function-call.java entity.name.function.java",
        "meta.method-call.static.java entity.name.function.java",
        "meta.method-call.java entity.name.function.java",
        "meta.class meta.group.braces.curly meta.function-call variable.function.java",
        "variable.function.constructor.java",
        "keyword.operator.arithmetic.java",
        "storage.modifier.import.java variable.language.wildcard.java"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "JSON",
      "scope": [
        "string.quoted.double.json",
        "punctuation.definition.string.begin.json",
        "punctuation.definition.string.end.json"
      ],
      "settings": {
        "foreground": "#99a7e2"
      }
    },
    {
      "name": "CSS/SCSS/Styl - Operator",
      "scope": [
        "source.css keyword.operator",
        "source.scss keyword.operator.",
        "source.stylus keyword.operator."
      ],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "CSS/SCSS/Styl - Classes",
      "scope": [
        "source.css entity.other.attribute-name.class",
        "source.scss entity.other.attribute-name.class",
        "source.stylus entity.other.attribute-name.class"
      ],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "CSS/SCSS/Styl - Id",
      "scope": [
        "source.css entity.other.attribute-name.id",
        "source.scss entity.other.attribute-name.iccccccccccccccccccccccccccccd",
        "source.stylus entity.other.attribute-name.id"
      ],
      "settings": {
        "foreground": "#c9ccd8",
        "fontStyle": "normal"
      }
    },
    {
      "name": "CSS/SCSS/Styl - Pseudo",
      "scope": [
        "source.css entity.other.attribute-name.pseudo-class.css",
        "source.css entity.other.attribute-name.pseudo-element",
        "source.scss entity.other.attribute-name.pseudo-element",
        "source.scss entity.other.attribute-name.pseudo-class.css",
        "source.stylus entity.other.attribute-name.pseudo-class.css",
        "source.stylus entity.other.attribute-name.pseudo-element",
        "source.css.less entity.other.attribute-name.pseudo-class.css",
        "source.css.less entity.other.attribute-name.pseudo-element"
      ],
      "settings": {
        "foreground": "#d7e2ff",
        "fontStyle": "italic"
      }
    },
    {
      "name": "CSS/SCSS/Styl - keyword",
      "scope": [
        "keyword.control.at-rule",
        "keyword.control.at-rule.mixin.scss",
        "keyword.control.at-rule.import.scss",
        "keyword.control.at-rule.include.scss",
        "keyword.control.at-rule.extend.scss",
        "keyword.control.at-rule.extend.scss",
        "keyword.control.if.scss",
        "keyword.control.else.scss",
        "punctuation.definition.keyword.stylus",
        "keyword.control.stylus",
        "source.stylus meta.selector.stylus",
        "source.css.less meta.property-list.css entity.other.attribute-name.parent-selector.css punctuation.definition.entity.css"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "scope": ["entity.name.variable"],
      "settings": {
        "foreground": "#d4d4d4"
      }
    },
    {
      "name": "SCSS/Styl - Functions",
      "scope": [
        "source.css.scss entity.name.function",
        "source.css.stylus entity.name.function",
        "source.stylus entity.name.function.stylus"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "LESS - Keyword",
      "scope": ["source.css.less keyword.control.logical.operator.less"],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "SCSS/LESS - Function Call",
      "scope": [
        "source.css.scss meta.property-list.scss meta.property-value.scss variable.scss",
        "source.css.less meta.property-list.css variable.other.less",
        "source.css.less meta.property-list.css entity.other.attribute-name.class.mixin.css"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "CSS/SCSS/LESS/Stylus - Punctuation",
      "scope": [
        "source.css entity.other.attribute-name.pseudo-class.css punctuation.definition.entity.css",
        "source.css.scss entity.other.attribute-name.pseudo-class.css punctuation.definition.entity.css",
        "source.stylus entity.other.attribute-name.pseudo-class.css punctuation.definition.entity.css",
        "source.css.less entity.other.attribute-name.pseudo-class.css punctuation.definition.entity.css",
        "source.css entity.other.attribute-name.pseudo-element.css punctuation.definition.entity.css",
        "source.css.less entity.other.attribute-name.pseudo-element.css punctuation.definition.entity.css",
        "source.scss entity.other.attribute-name.pseudo-element.css punctuation.definition.entity.css",
        "source.stylus entity.other.attribute-name.pseudo-element.css punctuation.definition.entity.css"
      ],
      "settings": {
        "foreground": "#d7e2ff",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Function Call - C#",
      "scope": [
        "source.cs support.function",
        "support.function.cs",
        "meta.function-call.cs entity.name.function.cs",
        "meta.method-call.static.cs entity.name.function.cs",
        "meta.method-call.cs entity.name.function.cs",
        "meta.class meta.group.braces.curly meta.function-call variable.function.cs",
        "variable.function.constructor.cs",
        "keyword.operator.arithmetic.cs",
        "storage.modifier.import.cs variable.language.wildcard.cs"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "INI - Group",
      "scope": ["entity.name.section.group-title.ini"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "INI - Operator",
      "scope": ["punctuation.separator.key-value.ini"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "INI - Definition",
      "scope": ["keyword.other.definition.ini"],
      "settings": {
        "foreground": "#8d9ad1"
      }
    },
    {
      "name": "INI - Comment",
      "scope": ["comment.line.number-sign.ini"],
      "settings": {
        "foreground": "#6F7899",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markdown - Heading",
      "scope": ["markup.heading.markdown"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Markdown - Quote",
      "scope": ["markup.quote.markdown"],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Markdown - Comment",
      "scope": ["text.html.markdown comment.block.html"],
      "settings": {
        "foreground": "#6F7899",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markdown - Link",
      "scope": [
        "text.html.markdown meta.link.inline.markdown",
        "text.html.markdown meta.image.inline.markdown",
        "text.html.markdown markup.inline.raw.string.markdown"
      ],
      "settings": {
        "foreground": "#ceb3f7"
      }
    },
    {
      "name": "Function/Class Name - JavaScript",
      "scope": [
        "entity.name.function.js",
        "entity.name.function.js.jsx",
        "meta.class.js entity.name.class",
        "meta.class.js.jsx entity.name.class",
        "meta.class.js entity.name.type.class",
        "meta.class.js.jsx entity.name.type.class",
        "meta.class meta.function-call variable.function.js",
        "meta.class meta.function-call variable.function.js.jsx",
        "source.js keyword.control.loop.js",
        "source.js.jsx keyword.control.loop.js.jsx",
        "storage.type.function.arrow.js",
        "storage.type.function.arrow.js.jsx",
        "tag.decorator.js entity.name.tag.js",
        "tag.decorator.js.jsx entity.name.tag.js.jsx",
        "source.js meta.interface.js entity.name.type.interface.js",
        "source.js.jsx meta.interface.js.jsx entity.name.type.interface.js.jsx",
        "source.js meta.type.declaration.js entity.name.type.js",
        "source.js.jsx meta.type.declaration.js.jsx entity.name.type.js.jsx",
        "source.js entity.name.type.alias.js",
        "source.js.jsx entity.name.type.alias.js.jsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - Go",
      "scope": ["entity.name.function.go", "source.go keyword.control.loop.go"],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - TypeScript",
      "scope": [
        "entity.name.function.ts",
        "entity.name.function.tsx",
        "meta.class.ts entity.name.type.class",
        "meta.class.tsx entity.name.type.class",
        "meta.class meta.function-call variable.function.ts",
        "meta.class meta.function-call variable.function.tsx",
        "source.ts keyword.control.loop.ts",
        "source.tsx keyword.control.loop.tsx",
        "storage.type.function.arrow.ts",
        "storage.type.function.arrow.tsx",
        "source.ts meta.interface.ts entity.name.type.interface.ts",
        "source.tsx meta.interface.tsx entity.name.type.interface.tsx",
        "source.ts meta.type.declaration.ts entity.name.type.ts",
        "source.tsx meta.type.declaration.tsx entity.name.type.tsx",
        "source.ts entity.name.type.alias.ts",
        "source.tsx entity.name.type.alias.tsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - PHP",
      "scope": [
        "entity.name.function.php",
        "meta.class.php entity.name.type.class",
        "meta.class meta.function-call variable.function.php",
        "source.php keyword.control.loop.php",
        "storage.type.function.arrow.php",
        "support.function.magic.php"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - Java",
      "scope": [
        "meta.method.identifier.java entity.name.function.java",
        "meta.method.identifier.java storage.type.generic.java",
        "meta.class meta.function-call variable.function.java",
        "source.java keyword.control.loop.java",
        "storage.type.function.arrow.java",
        "meta.class.identifier.java entity.name.type.class.java"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - C#",
      "scope": [
        "meta.method.identifier.cs entity.name.function.cs",
        "meta.method.identifier.cs storage.type.generic.cs",
        "meta.class meta.function-call variable.function.cs",
        "source.cs keyword.control.loop.cs",
        "storage.type.function.arrow.cs",
        "meta.class.identifier.cs entity.name.type.class.cs",
        "source.cs entity.name.function.cs",
        "source.cs entity.name.type.class.cs"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Function/Class Name - Elixir",
      "scope": [
        "source.elixir entity.name.function.elixir",
        "entity.name.type.module.elixir"
      ],
      "settings": {
        "foreground": "#d7e2ff"
      }
    },
    {
      "name": "Definition - XML",
      "scope": [
        "meta.tag.preprocessor.xml punctuation.definition.tag.xml",
        "meta.tag.sgml.doctype.xml punctuation.definition.tag.xml"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - JavaScript",
      "scope": [
        "keyword.control.flow.js",
        "keyword.control.flow.js.jsx",
        "keyword.control.trycatch.js",
        "keyword.control.trycatch.js.jsx",
        "source.js meta.group.braces.curly.js keyword.control.loop.js",
        "source.js.jsx meta.group.braces.curly.js.jsx keyword.control.loop.js.jsx",
        "source.js meta.export.default.js keyword.control.default.js",
        "source.js.jsx meta.export.default.js.jsx keyword.control.default.js.jsx",
        "keyword.control.switch.js",
        "keyword.control.switch.js.jsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - TypeScript",
      "scope": [
        "keyword.control.flow.ts",
        "keyword.control.flow.tsx",
        "keyword.control.trycatch.ts",
        "keyword.control.trycatch.tsx",
        "source.ts meta.group.braces.curly.ts keyword.control.loop.ts",
        "source.tsx meta.group.braces.curly.tsx keyword.control.loop.tsx",
        "source.ts meta.export.default.ts keyword.control.default.ts",
        "source.tsx meta.export.default.tsx keyword.control.default.tsx",
        "keyword.control.switch.ts",
        "keyword.control.switch.tsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - php",
      "scope": [
        "keyword.control.flow.php",
        "keyword.control.trycatch.php",
        "source.php meta.group.braces.curly.php keyword.control.loop.php",
        "keyword.control.switch.php"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - Shell Script",
      "scope": [
        "source.shell meta.scope.while-loop.shell keyword.control.shell",
        "source.shell meta.scope.for-in-loop.shell keyword.control.shell"
      ],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Control Flow - Shell Script 2",
      "scope": [
        "source.shell meta.scope.while-loop.shell meta.scope.if-block.shell keyword.control.shell",
        "source.shell meta.scope.for-in-loop.shell meta.scope.if-block.shell keyword.control.shell"
      ],
      "settings": {
        "foreground": "#8d9ad1",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Control Flow - Java",
      "scope": [
        "keyword.control.flow.java",
        "keyword.control.trycatch.java",
        "source.java meta.group.braces.curly.java keyword.control.loop.java",
        "keyword.control.switch.java"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - C#",
      "scope": [
        "source.cs keyword.control.flow",
        "keyword.control.trycatch.cs",
        "source.cs meta.group.braces.curly.cs keyword.control.loop.cs",
        "source.cs keyword.control.switch.cs"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Control Flow - Elixir",
      "scope": ["keyword.control.elixir"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Control Flow - Java italic",
      "scope": ["keyword.control.java"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Operator - XML",
      "scope": ["meta.tag.preprocessor.xml"],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Operator - XML",
      "scope": ["meta.tag.preprocessor.xml entity.other.attribute-name"],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "Assignment",
      "scope": "keyword.operator.assignment",
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Logic - JavaScript",
      "scope": [
        "keyword.operator.logical.js",
        "keyword.operator.logical.js.jsx"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Logic - TypeScript",
      "scope": ["keyword.operator.logical.ts", "keyword.operator.logical.tsx"],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Logic - Go",
      "scope": ["source.go keyword.operator.assignment.go"],
      "settings": {
        "foreground": "#ffedcb",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Logic - PHP",
      "scope": [
        "source.php keyword.operator",
        "punctuation.separator.inheritance.php"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Logic - Shell",
      "scope": ["source.shell meta.scope.logical-expression.shell"],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Variables & Braces - Shell",
      "scope": [
        "source.shell punctuation.definition.logical-expression.shell",
        "source.shell variable.other",
        "source.shell variable.other.normal.shell"
      ],
      "settings": {
        "foreground": "#c9ccd8",
        "fontStyle": "normal"
      }
    },
    {
      "name": "HTML Tag names",
      "scope": [
        "entity.name.tag support.class.component",
        "meta.tag.other.html",
        "meta.tag.other.js",
        "meta.tag.other.js.jsx",
        "meta.tag.other.tsx",
        "entity.name.tag.tsx",
        "entity.name.tag.js.jsx",
        "entity.name.tag.js",
        "entity.name.tag",
        "meta.tag.html"
      ],
      "settings": {
        "foreground": "#99a7e2"
      }
    },
    {
      "name": "Template Strings",
      "scope": [
        "keyword.other.template.begin",
        "keyword.other.template.end",
        "punctuation.definition.string.template.begin",
        "punctuation.definition.string.template.end"
      ],
      "settings": {
        "foreground": "#ffedcb"
      }
    },
    {
      "name": "Template Strings - Elixir",
      "scope": [
        "source.elixir string.quoted.double.elixir source.elixir.embedded.source punctuation.section.embedded.elixir"
      ],
      "settings": {
        "foreground": "#8d9ad1"
      }
    },
    {
      "name": "Template Strings Code - Elixir",
      "scope": [
        "source.elixir string.quoted.double.elixir source.elixir.embedded.source"
      ],
      "settings": {
        "foreground": "#c9ccd8"
      }
    },
    {
      "name": "String",
      "scope": [
        "string.double",
        "string.quoted",
        "string.interpolated",
        "string.template",
        "punctuation.definition.string",
        "markup.inline.raw.string"
      ],
      "settings": {
        "foreground": "#ceb3f7"
      }
    },
    {
      "name": "Literal",
      "scope": [
        "constant.language",
        "constant.numeric",
        "support.constant",
        "constant.character",
        "constant.other.color",
        "constant.other.symbol",
        "constant.other.key",
        "keyword.other.unit",
        "variable.language.this"
      ],
      "settings": {
        "foreground": "#cbb1f3"
      }
    },
    {
      "name": "Inserted",
      "scope": "markup.inserted",
      "settings": {
        "foreground": "#99C794"
      }
    },
    {
      "name": "Deleted",
      "scope": "markup.deleted",
      "settings": {
        "foreground": "#E15A60"
      }
    },
    {
      "name": "Changed",
      "scope": "markup.changed",
      "settings": {
        "foreground": "#BB80B3"
      }
    },
    {
      "name": "URL",
      "scope": "*url*, *link*, *uri*",
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "Search Results Nums",
      "scope": "constant.numeric.line-number.find-in-files - match",
      "settings": {
        "foreground": "#AB7967"
      }
    },
    {
      "name": "Search Results Lines",
      "scope": "entity.name.filename.find-in-files",
      "settings": {
        "foreground": "#99C794"
      }
    },
    {
      "scope": "token.info-token",
      "settings": {
        "foreground": "#6796e6"
      }
    },
    {
      "scope": "token.warn-token",
      "settings": {
        "foreground": "#cd9731"
      }
    },
    {
      "scope": "token.error-token",
      "settings": {
        "foreground": "#f44747"
      }
    },
    {
      "scope": "token.debug-token",
      "settings": {
        "foreground": "#b267e6"
      }
    },
    {
      "name": "Italic font style",
      "scope": [
        "entity.name.tag.doctype",
        "meta.tag.sgml.doctype",
        "meta.tag.sgml.doctype.html",
        "markup.italic.markdown",
        "markup.quote.markdown",
        "support.type.primitive",
        "entity.other.attribute-name",
        "entity.name.tag.custom",
        "source.js entity.other.attribute-name.js",
        "source.js.jsx entity.other.attribute-name.js",
        "ext.html.basic entity.other.attribute-name.html",
        "source.js.jsx keyword.control.flow.js",
        "support.type.property.css",
        "support.function.basic_functions",
        "variable.assignment.coffee",
        "support.function.basic_functions",
        "keyword.operator.type.annotation",
        "assignment.coffee",
        "italic",
        "quote",
        "type .function",
        "type.function",
        "storage.modifier.js",
        "storage.modifier.js.jsx",
        "storage.modifier.ts",
        "storage.modifier.tsx",
        "storage.modifier.php",
        "storage.type.class",
        "modifier",
        "keyword.control.flow",
        "source.shell keyword.control.shell",
        "keyword.control.default",
        "keyword.control.switch",
        "this",
        "support.type.builtin",
        "variable.language.this.php",
        "variable.language.this"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Normal font style",
      "scope": [
        "meta.interface.ts variable.object.property",
        "meta.interface.tsx variable.object.property",
        "meta.type.declaration.ts variable.object.property",
        "meta.type.declaration.tsx variable.object.property",
        "meta.function.parameter.typehinted.php storage.type.php",
        "punctuation.definition.template-expression.begin",
        "punctuation.definition.template-expression.end",
        "source.js meta.group.braces.curly.js keyword.other.substitution",
        "source.js.jsx meta.group.braces.curly.js.jsx keyword.other.substitution",
        "keyword.operator.type.annotation",
        "keyword.operator.type",
        "keyword.operator.logical",
        "source.php keyword.operator",
        "variable.object.property.ts",
        "variable.object.property.tsx",
        "keyword.operator.class.php",
        "support.function.basic_functions.php",
        "keyword.operator.flowtype.other.js",
        "keyword.operator.flowtype.other.js.jsx",
        "source.shell keyword.operator",
        "keyword.operator.ternary.js",
        "keyword.operator.ternary.js.jsx",
        "keyword.operator.ternary.ts",
        "keyword.operator.ternary.tsx",
        "source.js meta.group.regexp keyword.operator",
        "source.js.jsx meta.group.regexp keyword.operator",
        "source.ts meta.group.regexp keyword.operator",
        "source.tsx meta.group.regexp keyword.operator",
        "string.regexp.js keyword.control.anchor.regexp",
        "string.regexp.js.jsx keyword.control.anchor.regexp",
        "string.regexp.ts keyword.control.anchor.regexp",
        "string.regexp.tsx keyword.control.anchor.regexp",
        "keyword.operator.other.elixir",
        "keyword.operator.assignment.go",
        "source.ts keyword.operator.type.annotation.ts",
        "source.tsx keyword.operator.type.annotation.tsx",
        "source.js keyword.operator.ternary.js",
        "source.js.jsx keyword.operator.ternary.js.jsx",
        "source.ts keyword.operator.ternary.ts",
        "source.tsx keyword.operator.ternary.tsx"
      ],
      "settings": {
        "fontStyle": "normal"
      }
    }
  ]
}
